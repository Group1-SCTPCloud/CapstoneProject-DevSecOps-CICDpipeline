name: Deploy AWS S3 static website Infrastructure

#on:
#    push:
#      branches: 
#        - '*'
on:
  workflow_call:

env:
    #verbosity setting for Terraform logs
    TF_LOG: INFO
     # Credentials for deployment to AWS
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    # S3 bucket for the Terraform state
    BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}} 

jobs:
    #Upload_file:
    # name: upload index.html
    # runs-on: ubuntu-latest
     
    build:
     runs-on: ubuntu-latest
     steps:
      - uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ap-southeast-1 #update S3 bucket region here
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      - name: Install AWS CLI v2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update #update flag worked
    
        # Syncs the repo with the S3 bucket
      - name: Sync with S3 (to change bucket name, and make into variable)
        run: |
          aws s3 sync . s3://${{ vars.bucket_name }} --delete --exclude "*" --include "index.html"
            
        # can use aws s3 sync <LocalPath> <S3Uri> or <S3Uri> <LocalPath> or <S3Uri> <S3Uri>
        # represents current repo
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: Initiate npm
        run: |
          npm ci
      - name: run npm
        run: |
          npm run build --if-present

    install-dependencies:
     runs-on: ubuntu-latest
     needs: build
     steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
    
    unit-testing:
     runs-on: ubuntu-latest
     needs: install-dependencies
     steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install

    
    vulnerability-scan-1:
     runs-on: ubuntu-latest
     needs: unit-testing
     steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Run NPM Audit
        run: npm audit
    
    vulnerability-scan-2:
     runs-on: ubuntu-latest
     needs: unit-testing
     steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high